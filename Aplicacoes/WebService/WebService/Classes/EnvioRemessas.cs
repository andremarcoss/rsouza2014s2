//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.18444
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using System.Collections.Generic;
using System.Text;
using System.Data;

// 
// This source code was auto-generated by xsd, Version=4.0.30319.18020.
// 

//@author Rafael Alves de Sousa
//@date 20/11/2014
//@contact rafaelalvesdesousa1992@gmail.com

namespace WebService
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class envio
    {

        private string transportadoraCnpjField;

        private string chaveField;

        private List<envioRemessa> remessasField;

        /// <remarks/>
        public string transportadoraCnpj
        {
            get
            {
                return this.transportadoraCnpjField;
            }
            set
            {
                this.transportadoraCnpjField = value;
            }
        }

        /// <remarks/>
        public string chave
        {
            get
            {
                return this.chaveField;
            }
            set
            {
                this.chaveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("remessa", IsNullable = false)]
        public List<envioRemessa> remessas
        {
            get
            {
                return this.remessasField;
            }
            set
            {
                this.remessasField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class envioRemessa
    {
        public retornoEnvioRetornoOperacao GravarRemessa(string tranportadoraCnpj)
        {
            retornoEnvioRetornoOperacao retorno = new retornoEnvioRetornoOperacao();
            retorno.detalheErro = null;

            Conexao conexao = new Conexao();
            CadastrarMotorista();
            StringBuilder sbr = new StringBuilder();
            sbr.AppendLine("INSERT INTO Remessa(");
            sbr.AppendLine("rmsTransportadora,");
            sbr.AppendLine("rmsMotorista,");
            sbr.AppendLine("rmsRomaneio,");
            sbr.AppendLine("rmsDestinatarioEntrega,");
            sbr.AppendLine("rmsIdentificador,");
            sbr.AppendLine("rmsNotaFiscal,");
            sbr.AppendLine("rmsPedido,");
            sbr.AppendLine("rmsTotalVolumes,");
            sbr.AppendLine("rmsEnderecoEntrega,");
            sbr.AppendLine("rmsCidadeEntrega,");
            sbr.AppendLine("rmsCepEntrega,");
            sbr.AppendLine("rmsUFEntrega,");
            sbr.AppendLine("rmsObservacaoEnderecoEntrega)");
            sbr.AppendLine("VALUES(");
            sbr.AppendLine(string.Format("'{0}',", tranportadoraCnpj));
            sbr.AppendLine(string.Format("'{0}',", motoristaCpf));
            sbr.AppendLine(string.Format("'{0}',", romaneio));
            sbr.AppendLine(string.Format("'{0}',", destinatarioEntrega));
            sbr.AppendLine(string.Format("'{0}',", identificador));
            sbr.AppendLine(string.Format("'{0}',", notaFiscal));
            sbr.AppendLine(string.Format("'{0}',", pedido));
            sbr.AppendLine(string.Format("'{0}',", totalVolumes));
            sbr.AppendLine(string.Format("'{0}',", enderecoEntrega));
            sbr.AppendLine(string.Format("'{0}',", cidadeEntrega));
            sbr.AppendLine(string.Format("'{0}',", cepEntrega));
            sbr.AppendLine(string.Format("'{0}',", ufEntrega));
            sbr.AppendLine(string.Format("'{0}')", observacaoEnderecoEntrega));

            if (VerificarEnvioAnterior(tranportadoraCnpj))
            {
                retorno.mensagem = "Remessa já existe".ToUpper();
                retorno.status = "2";
                retorno.idRetorno = idRetorno;

                return retorno;
            }
            else
            {
                try
                {
                    conexao.ExecutarComandoDataRow(sbr.ToString());
                    retorno.mensagem = "Cadastrado com sucesso".ToUpper();
                    retorno.status = "1";
                    retorno.idRetorno = idRetorno;
                }
                catch (System.Exception erro)
                {
                    retorno.mensagem = "Erro ao processar a informação".ToUpper();
                    retorno.status = "4";
                    retorno.idRetorno = idRetorno;
                    retorno.detalheErro = erro.ToString();
                }
            }
            return retorno;
        }

        private bool VerificarEnvioAnterior(string transportadoraCnpj)
        {
            bool retorno = false;

            Conexao conexao = new Conexao();

            StringBuilder sbr = new StringBuilder();
            sbr.AppendLine("SELECT COUNT(0)[TOTAL] FROM Remessa");
            sbr.AppendLine("WHERE");
            sbr.AppendLine(string.Format("ISNULL(rmsIdentificador,'') = '{0}'", identificador));
            sbr.AppendLine(string.Format("AND ISNULL(rmsPedido,'') = '{0}'", pedido));
            sbr.AppendLine(string.Format("AND ISNULL(rmsNotaFiscal,'') = '{0}'", notaFiscal));
            sbr.AppendLine(string.Format("AND ISNULL(rmsRomaneio,'') = '{0}'", romaneio));
            sbr.AppendLine(string.Format("AND ISNULL(rmsTransportadora,'') = '{0}'", transportadoraCnpj));
            DataRow dtRow = conexao.ExecutarComandoDataRow(sbr.ToString());

            if (conexao.TemDados(dtRow))
                retorno = (dtRow["TOTAL"].ToString().Equals("1")) ? true : false;

            return retorno;
        }

        private void CadastrarMotorista()
        {
            Conexao conexao = new Conexao();

            StringBuilder sbr = new StringBuilder();
            sbr.AppendLine("SELECT COUNT(0)[TOTAL] FROM Motorista");
            sbr.AppendLine(string.Format("WHERE mtCpf = '{0}'", motoristaCpf));
            DataRow dtRow = conexao.ExecutarComandoDataRow(sbr.ToString());
            if (conexao.TemDados(dtRow))
            {
                if (dtRow["TOTAL"].ToString().Equals("0"))
                {
                    sbr.Clear();
                    sbr.AppendLine("INSERT INTO Motorista(mtCpf,mtSenha,mtNome)");
                    sbr.AppendLine(string.Format("VALUES('{0}','{1}','{2}')", motoristaCpf, motoristaCpf, motoristaNome));
                    conexao.ExecutarComandoDataSet(sbr.ToString());
                }
            }
        }

        private string motoristaCpfField;

        private string motoristaNomeField;

        private string identificadorField;

        private string notaFiscalField;

        private string pedidoField;

        private string totalVolumesField;

        private string romaneioField;

        private string enderecoEntregaField;

        private string cidadeEntregaField;

        private string cepEntregaField;

        private string ufEntregaField;

        private string observacaoEnderecoEntregaField;

        private string destinatarioEntregaField;

        private string idRetornoField;

        /// <remarks/>
        public string motoristaCpf
        {
            get
            {
                return this.motoristaCpfField;
            }
            set
            {
                this.motoristaCpfField = value;
            }
        }

        /// <remarks/>
        public string motoristaNome
        {
            get
            {
                return this.motoristaNomeField;
            }
            set
            {
                this.motoristaNomeField = value;
            }
        }

        /// <remarks/>
        public string romaneio
        {
            get
            {
                return this.romaneioField;
            }
            set
            {
                this.romaneioField = value;
            }
        }

        /// <remarks/>
        public string destinatarioEntrega
        {
            get
            {
                return this.destinatarioEntregaField;
            }
            set
            {
                this.destinatarioEntregaField = value;
            }
        }

        /// <remarks/>
        public string identificador
        {
            get
            {
                return this.identificadorField;
            }
            set
            {
                this.identificadorField = value;
            }
        }

        /// <remarks/>
        public string notaFiscal
        {
            get
            {
                return this.notaFiscalField;
            }
            set
            {
                this.notaFiscalField = value;
            }
        }

        /// <remarks/>
        public string pedido
        {
            get
            {
                return this.pedidoField;
            }
            set
            {
                this.pedidoField = value;
            }
        }

        /// <remarks/>
        public string totalVolumes
        {
            get
            {
                return this.totalVolumesField;
            }
            set
            {
                this.totalVolumesField = value;
            }
        }

        /// <remarks/>
        public string enderecoEntrega
        {
            get
            {
                return this.enderecoEntregaField;
            }
            set
            {
                this.enderecoEntregaField = value;
            }
        }

        /// <remarks/>
        public string cidadeEntrega
        {
            get
            {
                return this.cidadeEntregaField;
            }
            set
            {
                this.cidadeEntregaField = value;
            }
        }

        /// <remarks/>
        public string cepEntrega
        {
            get
            {
                return this.cepEntregaField;
            }
            set
            {
                this.cepEntregaField = value;
            }
        }

        /// <remarks/>
        public string ufEntrega
        {
            get
            {
                return this.ufEntregaField;
            }
            set
            {
                this.ufEntregaField = value;
            }
        }

        /// <remarks/>
        public string observacaoEnderecoEntrega
        {
            get
            {
                return this.observacaoEnderecoEntregaField;
            }
            set
            {
                this.observacaoEnderecoEntregaField = value;
            }
        }

        /// <remarks/>
        public string idRetorno
        {

            get
            {
                return this.idRetornoField;
            }
            set
            {
                this.idRetornoField = value;
            }
        }
    }
}